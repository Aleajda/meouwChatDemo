{"version":3,"file":"static/js/351.d6a62699.chunk.js","mappings":"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","sources":["webpack://reactapp1/./src/components/Users/Users.module.css?b9d0","components/Users/Users.jsx","components/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"avaImg\":\"Users_avaImg__p+56H\",\"selectedPage\":\"Users_selectedPage__t+DRe\",\"unselectedPage\":\"Users_unselectedPage__Cv1PI\",\"paginator\":\"Users_paginator__D30Mh\",\"paginatorContent\":\"Users_paginatorContent__pEHyr\",\"navBtn\":\"Users_navBtn__-c5RM\",\"forMobile\":\"Users_forMobile__YggB+\",\"forBigScreens\":\"Users_forBigScreens__+yyZ2\",\"users\":\"Users_users__f4zWh\",\"user\":\"Users_user__1lDT9\",\"userName\":\"Users_userName__k6XzR\",\"userSearch\":\"Users_userSearch__oCR5-\",\"submitBtn\":\"Users_submitBtn__dtOFH\",\"searchBtn\":\"Users_searchBtn__+3dsh\"};","import React, { useRef } from \"react\";\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from \"../../images/img.jpg\"\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { setQuery } from \"../../redux/usersReducer\";\r\n      \r\nconst Users = (props) => {\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++){\r\n        pages.push(i);\r\n    }\r\n\r\n    let startPage;\r\n    let endPage;\r\n\r\n    if (props.currentPage <= 3) {\r\n        startPage = 1;\r\n        endPage = Math.min(5, pagesCount);\r\n    } else if (props.currentPage >= pagesCount - 2) {\r\n        endPage = pagesCount;\r\n        startPage = Math.max(1, pagesCount - 4);\r\n    } else {\r\n        startPage = props.currentPage - 2;\r\n        endPage = props.currentPage + 2;\r\n    }\r\n\r\n    const inputRef = useRef()\r\n\r\n    const queryBtn = () => {\r\n        if (inputRef.current.value){\r\n            props.setQuery(inputRef.current.value)\r\n            inputRef.current.value = \"\"\r\n        }\r\n    }\r\n\r\n    const sbrosBtn = () => {\r\n        props.setQuery(\"\")\r\n    }\r\n\r\n    return (\r\n        <div> \r\n            <div className={s.paginator}>\r\n                <div className={s.paginatorContent}>\r\n                    <span>\r\n                        <button className={s.navBtn + \" \" + s.submitBtn} disabled={props.currentPage === 1} onClick={() => props.onPageChanged(1)}>{\"<< первая\"}</button>\r\n                        <button className={s.navBtn + \" \" + s.submitBtn} disabled={props.currentPage === 1} onClick={() => props.onPageChanged(props.currentPage - 1)}>{\"<< назад\"}</button>\r\n                    </span>\r\n                    \r\n                    <span className={s.forBigScreens}>\r\n                        {pages.slice(startPage - 1, endPage).map((p, index) => {\r\n                            return <span key={index} onClick={() => props.onPageChanged(p)} className={props.currentPage === p ? s.selectedPage : s.unselectedPage}>{p}</span>\r\n                        })}\r\n                    </span>\r\n\r\n                    \r\n                    <span className={s.forMobile}>{props.currentPage}</span>\r\n                    \r\n                    \r\n                    <span>\r\n                        <button className={s.navBtn + \" \" + s.submitBtn} disabled={props.currentPage === pagesCount} onClick={() => props.onPageChanged(props.currentPage + 1)}>{\"вперед >>\"}</button>\r\n                        <button className={s.navBtn + \" \" + s.submitBtn} disabled={props.currentPage === pagesCount} onClick={() => props.onPageChanged(pagesCount)}>{\"конец >>\"}</button>\r\n                    </span>\r\n                </div>\r\n                <div className={s.userSearch}>\r\n                        <span>Найти:</span>\r\n                        <input ref={inputRef} type=\"text\" name=\"\" id=\"\" />\r\n                        <button className={s.searchBtn} onClick={queryBtn}>Поиск</button>\r\n                        <button className={s.searchBtn} onClick={sbrosBtn}>Сброс</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.users}>\r\n                {   \r\n                    props.users.map(u => <div className={s.user} key={u.id}>\r\n                        <NavLink to={`/profile/${u.id}`}>\r\n                            <div className={s.avaImg}>\r\n                                <img src={u.photos.small != null ? u.photos.small : userPhoto} alt=\"\" />\r\n                            </div>\r\n                        </NavLink>\r\n                        <div className={s.userName}>\r\n                            {u.name}\r\n                        </div>\r\n                        <div>\r\n                            {u.followed \r\n                                ? <button disabled={props.isFollowing.some(id => id === u.id)} onClick={() => {props.unfollow(u.id);}}>Unfollow</button>\r\n                                : <button disabled={props.isFollowing.some(id => id === u.id)} onClick={() => {props.follow(u.id);}}>Follow</button>}\r\n                        </div>\r\n                    </div>)\r\n                }\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Users;","import React, { useEffect } from \"react\";\r\nimport Users from \"./Users\";\r\nimport { follow, setUsers, unfollow, clearUsers, setCurrentPage, setTotalUsersCount, setUsersAreLoading, setFollowingInProgress, getUsers, setQuery } from \"../../redux/usersReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport Preloader from \"../additional/Preloader/Preloader\";\r\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\n\r\nconst UsersContainer = (props) =>{\r\n    \r\n    useEffect(() =>{\r\n        props.getUsers(props.currentPage, props.pageSize, props.query);\r\n        return () =>{\r\n            props.clearUsers();\r\n        }\r\n    }, [props.query]);\r\n\r\n    let onPageChanged = (PageNumber) => {\r\n        props.setCurrentPage(PageNumber);\r\n        props.clearUsers();\r\n        props.getUsers(PageNumber, props.pageSize, props.query);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Users {...props} onPageChanged={onPageChanged}/>\r\n            {props.isLoading ? <Preloader/> : null}\r\n        </>\r\n    ); \r\n}\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        users: state.Users.users,\r\n        pageSize: state.Users.pageSize,\r\n        totalUsersCount: state.Users.totalUsersCount,\r\n        currentPage: state.Users.currentPage,\r\n        isLoading: state.Users.isLoading,\r\n        isFollowing: state.Users.isFollowing,\r\n        query: state.Users.query\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {unfollow, follow, setUsers, clearUsers, setCurrentPage, setTotalUsersCount, setUsersAreLoading, setFollowingInProgress, getUsers, setQuery} ),  withAuthRedirect)(UsersContainer);\r\n"],"names":["props","startPage","endPage","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","currentPage","min","max","inputRef","useRef","_jsxs","children","className","s","_jsx","disabled","onClick","onPageChanged","slice","map","p","index","ref","type","name","id","queryBtn","current","value","setQuery","sbrosBtn","users","u","NavLink","to","concat","src","photos","small","userPhoto","alt","followed","isFollowing","some","unfollow","follow","compose","connect","state","Users","isLoading","query","setUsers","clearUsers","setCurrentPage","setTotalUsersCount","setUsersAreLoading","setFollowingInProgress","getUsers","withAuthRedirect","useEffect","_Fragment","PageNumber","Preloader"],"sourceRoot":""}